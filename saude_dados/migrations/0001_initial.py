# Generated by Django 5.2.6 on 2025-09-18 00:21

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("cidadaos", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DadosSaude",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "pressao_sistolica",
                    models.PositiveIntegerField(
                        help_text="Pressão arterial sistólica (mmHg)",
                        validators=[
                            django.core.validators.MinValueValidator(70),
                            django.core.validators.MaxValueValidator(250),
                        ],
                    ),
                ),
                (
                    "pressao_diastolica",
                    models.PositiveIntegerField(
                        help_text="Pressão arterial diastólica (mmHg)",
                        validators=[
                            django.core.validators.MinValueValidator(40),
                            django.core.validators.MaxValueValidator(150),
                        ],
                    ),
                ),
                (
                    "frequencia_cardiaca",
                    models.PositiveIntegerField(
                        help_text="Frequência cardíaca (bpm)",
                        validators=[
                            django.core.validators.MinValueValidator(30),
                            django.core.validators.MaxValueValidator(220),
                        ],
                    ),
                ),
                (
                    "temperatura",
                    models.DecimalField(
                        decimal_places=1,
                        help_text="Temperatura corporal (°C)",
                        max_digits=4,
                        validators=[
                            django.core.validators.MinValueValidator(30.0),
                            django.core.validators.MaxValueValidator(45.0),
                        ],
                    ),
                ),
                (
                    "peso",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Peso em kg",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(1.0),
                            django.core.validators.MaxValueValidator(300.0),
                        ],
                    ),
                ),
                (
                    "altura",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Altura em metros",
                        max_digits=4,
                        validators=[
                            django.core.validators.MinValueValidator(0.3),
                            django.core.validators.MaxValueValidator(2.5),
                        ],
                    ),
                ),
                (
                    "sintomas_principais",
                    models.TextField(help_text="Descrição dos sintomas principais"),
                ),
                (
                    "nivel_dor",
                    models.IntegerField(
                        choices=[
                            (0, "Sem dor"),
                            (1, "Dor muito leve"),
                            (2, "Dor leve"),
                            (3, "Dor moderada"),
                            (4, "Dor forte"),
                            (5, "Dor muito forte"),
                            (6, "Dor severa"),
                            (7, "Dor muito severa"),
                            (8, "Dor intensa"),
                            (9, "Dor insuportável"),
                            (10, "Dor máxima"),
                        ],
                        help_text="Escala de dor de 0 a 10",
                    ),
                ),
                (
                    "duracao_sintomas",
                    models.CharField(
                        help_text="Há quanto tempo os sintomas iniciaram",
                        max_length=100,
                    ),
                ),
                (
                    "historico_doencas",
                    models.TextField(
                        blank=True,
                        help_text="Histórico de doenças crônicas e anteriores",
                    ),
                ),
                (
                    "medicamentos_uso",
                    models.TextField(blank=True, help_text="Medicamentos em uso atual"),
                ),
                (
                    "alergias",
                    models.TextField(blank=True, help_text="Alergias conhecidas"),
                ),
                ("fumante", models.BooleanField(default=False)),
                ("etilista", models.BooleanField(default=False)),
                (
                    "nivel_atividade_fisica",
                    models.CharField(
                        choices=[
                            ("sedentario", "Sedentário"),
                            ("leve", "Atividade Leve"),
                            ("moderada", "Atividade Moderada"),
                            ("intensa", "Atividade Intensa"),
                            ("muito_intensa", "Atividade Muito Intensa"),
                        ],
                        default="sedentario",
                        max_length=20,
                    ),
                ),
                (
                    "horas_sono",
                    models.PositiveIntegerField(
                        help_text="Horas de sono por noite",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(24),
                        ],
                    ),
                ),
                (
                    "alimentacao_balanceada",
                    models.BooleanField(
                        default=False, help_text="Possui alimentação balanceada"
                    ),
                ),
                (
                    "consumo_agua_litros",
                    models.DecimalField(
                        decimal_places=1,
                        help_text="Consumo de água em litros por dia",
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0.1),
                            django.core.validators.MaxValueValidator(10.0),
                        ],
                    ),
                ),
                (
                    "dados_extras",
                    models.JSONField(
                        blank=True,
                        help_text="Dados adicionais em formato JSON",
                        null=True,
                    ),
                ),
                ("criado_em", models.DateTimeField(auto_now_add=True)),
                ("atualizado_em", models.DateTimeField(auto_now=True)),
                ("sincronizado", models.BooleanField(default=False)),
                (
                    "agente_coleta",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "cidadao",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dados_saude",
                        to="cidadaos.cidadao",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dados de Saúde",
                "verbose_name_plural": "Dados de Saúde",
                "ordering": ["-criado_em"],
            },
        ),
        migrations.CreateModel(
            name="HistoricoSaude",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("condicoes_cronicas", models.TextField(blank=True)),
                ("procedimentos_realizados", models.TextField(blank=True)),
                ("internacoes", models.TextField(blank=True)),
                (
                    "historico_familiar",
                    models.TextField(
                        blank=True, help_text="Histórico de doenças na família"
                    ),
                ),
                ("criado_em", models.DateTimeField(auto_now_add=True)),
                ("atualizado_em", models.DateTimeField(auto_now=True)),
                (
                    "cidadao",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="historico_saude",
                        to="cidadaos.cidadao",
                    ),
                ),
            ],
            options={
                "verbose_name": "Histórico de Saúde",
                "verbose_name_plural": "Históricos de Saúde",
            },
        ),
    ]
