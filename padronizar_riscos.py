#!/usr/bin/env python
"""
Script para padronizar os nÃ­veis de risco no banco (remover acentos)
"""
import os
import django

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'health_system.settings')
django.setup()

from geolocation.models import LocalizacaoSaude

def padronizar_riscos():
    """Padroniza os nÃ­veis de risco removendo acentos"""
    
    # Mapeamento de correÃ§Ãµes
    correcoes = {
        'mÃ©dio': 'medio',
        'MÃ‰DIO': 'medio', 
        'MÃ©dio': 'medio',
        'MEDIO': 'medio',
        'Medio': 'medio',
        'baixo': 'baixo',
        'BAIXO': 'baixo',
        'Baixo': 'baixo',
        'alto': 'alto',
        'ALTO': 'alto',
        'Alto': 'alto',
        'critico': 'critico',
        'CRITICO': 'critico',
        'Critico': 'critico'
    }
    
    localizacoes = LocalizacaoSaude.objects.all()
    corrigidos = 0
    
    print("ðŸŽ¯ Padronizando nÃ­veis de risco...")
    print(f"Total de registros: {localizacoes.count()}")
    
    for loc in localizacoes:
        risco_original = loc.nivel_risco
        risco_corrigido = correcoes.get(risco_original, risco_original.lower())
        
        if risco_original != risco_corrigido:
            loc.nivel_risco = risco_corrigido
            loc.save()
            print(f"âœ… {loc.cidadao.nome}: '{risco_original}' â†’ '{risco_corrigido}'")
            corrigidos += 1
        else:
            print(f"ðŸ”¹ {loc.cidadao.nome}: '{risco_original}' (jÃ¡ correto)")
    
    print(f"\nðŸŽ‰ Processamento concluÃ­do: {corrigidos} registros corrigidos")
    
    # Mostrar distribuiÃ§Ã£o final
    from collections import Counter
    riscos_finais = [loc.nivel_risco for loc in LocalizacaoSaude.objects.all()]
    distribuicao = Counter(riscos_finais)
    
    print("\nðŸ“Š DistribuiÃ§Ã£o final:")
    for risco, qtd in sorted(distribuicao.items()):
        print(f"   {risco}: {qtd} cidadÃ£os")

if __name__ == "__main__":
    padronizar_riscos()